{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./storage.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_24_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const file_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.downloadFile(file_r1.name));\n    });\n    i0.ɵɵtext(5, \"Download\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_24_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const file_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteFile(file_r1.name));\n    });\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor(storageService) {\n    this.storageService = storageService;\n    this.title = 'app';\n    this.files = [];\n    this.selectedFile = null;\n    this.uploadedFiles = []; // 儲存上傳的檔案資訊\n  }\n\n  ngOnInit() {\n    this.loadFiles();\n  }\n  loadFiles() {\n    this.storageService.getFileList().subscribe(data => {\n      this.files = data.items;\n    });\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onUpload() {\n    if (this.selectedFile) {\n      this.storageService.uploadFile(this.selectedFile).subscribe(response => {\n        // 將上傳的檔案資訊加入到列表中\n        this.uploadedFiles.push({\n          uuidFileName: response.uuidFileName,\n          originalFileName: response.originalFileName\n        });\n        this.loadFiles();\n        this.selectedFile = null;\n      });\n    }\n  }\n  downloadFile(fileName) {\n    this.storageService.downloadFile(fileName).subscribe(blob => {\n      const a = document.createElement('a');\n      const objectUrl = URL.createObjectURL(blob);\n      a.href = objectUrl;\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(objectUrl);\n    });\n  }\n  deleteFile(fileName) {\n    this.storageService.deleteFile(fileName).subscribe(() => {\n      this.loadFiles();\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 25,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"form-group\"], [\"type\", \"file\", 1, \"form-control-file\", 3, \"change\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"card\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", \"btn-sm\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"h1\");\n      i0.ɵɵtext(3, \"GCP Storage File Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"h5\", 3);\n      i0.ɵɵtext(7, \"Upload File\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_9_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n        return ctx.onUpload();\n      });\n      i0.ɵɵtext(11, \"Upload\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 2)(14, \"h5\", 3);\n      i0.ɵɵtext(15, \"File List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"table\", 8)(17, \"thead\")(18, \"tr\")(19, \"th\");\n      i0.ɵɵtext(20, \"File Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"tbody\");\n      i0.ɵɵtemplate(24, AppComponent_tr_24_Template, 8, 1, \"tr\", 9);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", !ctx.selectedFile);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.files);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","storageService","ngOnInit","loadFiles","getFileList","subscribe","data","files","items","onFileSelected","event","selectedFile","target","onUpload","uploadFile","response","uploadedFiles","push","uuidFileName","originalFileName","downloadFile","fileName","blob","a","document","createElement","objectUrl","URL","createObjectURL","href","download","click","revokeObjectURL","deleteFile","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/delllin/Projects/GcpFileMove/ClientApp/src/app/app.component.html","/Users/delllin/Projects/GcpFileMove/ClientApp/src/app/app.component.ts"],"sourcesContent":["<body>\n  <div class=\"container\">\n    <h1>GCP Storage File Management</h1>\n\n    <div class=\"card mb-4\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Upload File</h5>\n        <div class=\"form-group\">\n          <input type=\"file\" (change)=\"onFileSelected($event)\" class=\"form-control-file\">\n        </div>\n        <button (click)=\"onUpload()\" class=\"btn btn-primary\" [disabled]=\"!selectedFile\">Upload</button>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">File List</h5>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>File Name</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let file of files\">\n              <td>{{ file.name }}</td>\n              <td>\n                <button (click)=\"downloadFile(file.name)\" class=\"btn btn-success btn-sm mr-2\">Download</button>\n                <button (click)=\"deleteFile(file.name)\" class=\"btn btn-danger btn-sm\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { StorageService, UploadResponse } from './storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  files: any[] = [];\n  selectedFile: File | null = null;\n  uploadedFiles: { uuidFileName: string, originalFileName: string }[] = []; // 儲存上傳的檔案資訊\n\n  constructor(private storageService: StorageService) { }\n\n  ngOnInit() {\n    this.loadFiles();\n  }\n\n  loadFiles() {\n    this.storageService.getFileList().subscribe(data => {\n      this.files = data.items;\n    });\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onUpload() {\n    if (this.selectedFile) {\n      this.storageService.uploadFile(this.selectedFile).subscribe((response: UploadResponse) => {\n        // 將上傳的檔案資訊加入到列表中\n        this.uploadedFiles.push({\n          uuidFileName: response.uuidFileName,\n          originalFileName: response.originalFileName\n        });\n        this.loadFiles();\n        this.selectedFile = null;\n      });\n    }\n  }\n\n  downloadFile(fileName: string) {\n    this.storageService.downloadFile(fileName).subscribe(blob => {\n      const a = document.createElement('a');\n      const objectUrl = URL.createObjectURL(blob);\n      a.href = objectUrl;\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(objectUrl);\n    });\n  }\n\n  deleteFile(fileName: string) {\n    this.storageService.deleteFile(fileName).subscribe(() => {\n      this.loadFiles();\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}