{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StorageService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/storage`;\n  }\n  getFileList() {\n    return this.http.get(this.apiUrl);\n  }\n  uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post(this.apiUrl, formData);\n  }\n  downloadFile(uuidFileName) {\n    // 直接開啟下載連結，讓瀏覽器處理檔案下載\n    const downloadUrl = `${this.apiUrl}/${uuidFileName}`;\n    window.open(downloadUrl, '_blank');\n  }\n  // 如果需要通過 Observable 方式處理下載\n  downloadFileAsBlob(uuidFileName) {\n    return this.http.get(`${this.apiUrl}/${uuidFileName}`, {\n      responseType: 'blob'\n    });\n  }\n  deleteFile(uuidFileName) {\n    return this.http.delete(`${this.apiUrl}/${uuidFileName}`);\n  }\n}\nStorageService.ɵfac = function StorageService_Factory(t) {\n  return new (t || StorageService)(i0.ɵɵinject(i1.HttpClient));\n};\nStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StorageService,\n  factory: StorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,GAAGH,WAAW,CAACI,MAAM,UAAU;EAER;EAExCC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC;EACxC;EAEAG,UAAU,CAACC,IAAU;IACnB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,EAAEA,IAAI,CAACI,IAAI,CAAC;IACxC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,MAAM,EAAEK,QAAQ,CAAC;EAC9C;EAEAK,YAAY,CAACC,YAAoB;IAC/B;IACA,MAAMC,WAAW,GAAG,GAAG,IAAI,CAACZ,MAAM,IAAIW,YAAY,EAAE;IACpDE,MAAM,CAACC,IAAI,CAACF,WAAW,EAAE,QAAQ,CAAC;EACpC;EAEA;EACAG,kBAAkB,CAACJ,YAAoB;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,IAAIW,YAAY,EAAE,EAAE;MACrDK,YAAY,EAAE;KACf,CAAC;EACJ;EAEAC,UAAU,CAACN,YAAoB;IAC7B,OAAO,IAAI,CAACZ,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAAClB,MAAM,IAAIW,YAAY,EAAE,CAAC;EAC3D;;AA/BWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["environment","StorageService","constructor","http","apiUrl","getFileList","get","uploadFile","file","formData","FormData","append","name","post","downloadFile","uuidFileName","downloadUrl","window","open","downloadFileAsBlob","responseType","deleteFile","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/delllin/Projects/GcpFileMove/ClientApp/src/app/storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private apiUrl = `${environment.apiUrl}/storage`;\n\n  constructor(private http: HttpClient) { }\n\n  getFileList(): Observable<any> {\n    return this.http.get<any>(this.apiUrl);\n  }\n\n  uploadFile(file: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post(this.apiUrl, formData);\n  }\n\n  downloadFile(uuidFileName: string): void {\n    // 直接開啟下載連結，讓瀏覽器處理檔案下載\n    const downloadUrl = `${this.apiUrl}/${uuidFileName}`;\n    window.open(downloadUrl, '_blank');\n  }\n\n  // 如果需要通過 Observable 方式處理下載\n  downloadFileAsBlob(uuidFileName: string): Observable<Blob> {\n    return this.http.get(`${this.apiUrl}/${uuidFileName}`, {\n      responseType: 'blob'\n    });\n  }\n\n  deleteFile(uuidFileName: string): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${uuidFileName}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}