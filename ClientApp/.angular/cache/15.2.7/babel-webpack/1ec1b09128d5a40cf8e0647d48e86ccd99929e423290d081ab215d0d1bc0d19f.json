{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./storage.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_26_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const file_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.downloadFile(file_r3.uuidFileName));\n    });\n    i0.ɵɵtext(7, \"Download\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_26_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const file_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteFile(file_r3.uuidFileName));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r3.originalFileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r3.uuidFileName);\n  }\n}\nfunction AppComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" No files uploaded yet. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_tr_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_40_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const file_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.downloadFile(file_r7.name));\n    });\n    i0.ɵɵtext(5, \"Download\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_40_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const file_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteFile(file_r7.name));\n    });\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r7.name);\n  }\n}\nexport class AppComponent {\n  constructor(storageService) {\n    this.storageService = storageService;\n    this.title = 'app';\n    this.files = [];\n    this.selectedFile = null;\n    this.uploadedFiles = []; // 儲存上傳的檔案資訊\n  }\n\n  ngOnInit() {\n    this.loadFiles();\n  }\n  loadFiles() {\n    this.storageService.getFileList().subscribe(data => {\n      this.files = data.items;\n    });\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onUpload() {\n    if (this.selectedFile) {\n      this.storageService.uploadFile(this.selectedFile).subscribe(response => {\n        // 將上傳的檔案資訊加入到列表中\n        this.uploadedFiles.push({\n          uuidFileName: response.uuidFileName,\n          originalFileName: response.originalFileName\n        });\n        this.loadFiles();\n        this.selectedFile = null;\n      });\n    }\n  }\n  downloadFile(uuidFileName) {\n    // 使用簡化的下載方法，直接開啟下載連結\n    this.storageService.downloadFile(uuidFileName);\n  }\n  // 如果需要更複雜的下載處理，可以使用這個方法\n  downloadFileAsBlob(uuidFileName) {\n    this.storageService.downloadFileAsBlob(uuidFileName).subscribe(blob => {\n      const a = document.createElement('a');\n      const objectUrl = URL.createObjectURL(blob);\n      a.href = objectUrl;\n      a.download = `downloaded_${uuidFileName}`; // 使用 UUID 作為預設檔案名稱\n      a.click();\n      URL.revokeObjectURL(objectUrl);\n    });\n  }\n  deleteFile(uuidFileName) {\n    this.storageService.deleteFile(uuidFileName).subscribe(() => {\n      // 從本地列表中移除已刪除的檔案\n      this.uploadedFiles = this.uploadedFiles.filter(f => f.uuidFileName !== uuidFileName);\n      this.loadFiles();\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 41,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"form-group\"], [\"type\", \"file\", 1, \"form-control-file\", 3, \"change\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"card\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [1, \"card\", \"mt-4\"], [1, \"btn\", \"btn-success\", \"btn-sm\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"text-muted\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"h1\");\n      i0.ɵɵtext(3, \"GCP Storage File Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"h5\", 3);\n      i0.ɵɵtext(7, \"Upload File\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_9_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n        return ctx.onUpload();\n      });\n      i0.ɵɵtext(11, \"Upload\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 2)(14, \"h5\", 3);\n      i0.ɵɵtext(15, \"Uploaded Files\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"table\", 8)(17, \"thead\")(18, \"tr\")(19, \"th\");\n      i0.ɵɵtext(20, \"Original File Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"UUID File Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"tbody\");\n      i0.ɵɵtemplate(26, AppComponent_tr_26_Template, 10, 2, \"tr\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(27, AppComponent_div_27_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 11)(29, \"div\", 2)(30, \"h5\", 3);\n      i0.ɵɵtext(31, \"All Files in Storage (Raw API Response)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"table\", 8)(33, \"thead\")(34, \"tr\")(35, \"th\");\n      i0.ɵɵtext(36, \"File Name (UUID)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"th\");\n      i0.ɵɵtext(38, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"tbody\");\n      i0.ɵɵtemplate(40, AppComponent_tr_40_Template, 8, 1, \"tr\", 9);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", !ctx.selectedFile);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.uploadedFiles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.uploadedFiles.length === 0);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.files);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","storageService","ngOnInit","loadFiles","getFileList","subscribe","data","files","items","onFileSelected","event","selectedFile","target","onUpload","uploadFile","response","uploadedFiles","push","uuidFileName","originalFileName","downloadFile","downloadFileAsBlob","blob","a","document","createElement","objectUrl","URL","createObjectURL","href","download","click","revokeObjectURL","deleteFile","filter","f","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/delllin/Projects/GcpFileMove/ClientApp/src/app/app.component.html","/Users/delllin/Projects/GcpFileMove/ClientApp/src/app/app.component.ts"],"sourcesContent":["<body>\n  <div class=\"container\">\n    <h1>GCP Storage File Management</h1>\n\n    <div class=\"card mb-4\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Upload File</h5>\n        <div class=\"form-group\">\n          <input type=\"file\" (change)=\"onFileSelected($event)\" class=\"form-control-file\">\n        </div>\n        <button (click)=\"onUpload()\" class=\"btn btn-primary\" [disabled]=\"!selectedFile\">Upload</button>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Uploaded Files</h5>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Original File Name</th>\n              <th>UUID File Name</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let file of uploadedFiles\">\n              <td>{{ file.originalFileName }}</td>\n              <td>{{ file.uuidFileName }}</td>\n              <td>\n                <button (click)=\"downloadFile(file.uuidFileName)\" class=\"btn btn-success btn-sm mr-2\">Download</button>\n                <button (click)=\"deleteFile(file.uuidFileName)\" class=\"btn btn-danger btn-sm\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div *ngIf=\"uploadedFiles.length === 0\" class=\"text-muted\">\n          No files uploaded yet.\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card mt-4\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">All Files in Storage (Raw API Response)</h5>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>File Name (UUID)</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let file of files\">\n              <td>{{ file.name }}</td>\n              <td>\n                <button (click)=\"downloadFile(file.name)\" class=\"btn btn-success btn-sm mr-2\">Download</button>\n                <button (click)=\"deleteFile(file.name)\" class=\"btn btn-danger btn-sm\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</body>","import { Component, OnInit } from '@angular/core';\nimport { StorageService, UploadResponse } from './storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  files: any[] = [];\n  selectedFile: File | null = null;\n  uploadedFiles: { uuidFileName: string, originalFileName: string }[] = []; // 儲存上傳的檔案資訊\n\n  constructor(private storageService: StorageService) { }\n\n  ngOnInit() {\n    this.loadFiles();\n  }\n\n  loadFiles() {\n    this.storageService.getFileList().subscribe(data => {\n      this.files = data.items;\n    });\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onUpload() {\n    if (this.selectedFile) {\n      this.storageService.uploadFile(this.selectedFile).subscribe((response: UploadResponse) => {\n        // 將上傳的檔案資訊加入到列表中\n        this.uploadedFiles.push({\n          uuidFileName: response.uuidFileName,\n          originalFileName: response.originalFileName\n        });\n        this.loadFiles();\n        this.selectedFile = null;\n      });\n    }\n  }\n\n  downloadFile(uuidFileName: string) {\n    // 使用簡化的下載方法，直接開啟下載連結\n    this.storageService.downloadFile(uuidFileName);\n  }\n\n  // 如果需要更複雜的下載處理，可以使用這個方法\n  downloadFileAsBlob(uuidFileName: string) {\n    this.storageService.downloadFileAsBlob(uuidFileName).subscribe((blob: Blob) => {\n      const a = document.createElement('a');\n      const objectUrl = URL.createObjectURL(blob);\n      a.href = objectUrl;\n      a.download = `downloaded_${uuidFileName}`; // 使用 UUID 作為預設檔案名稱\n      a.click();\n      URL.revokeObjectURL(objectUrl);\n    });\n  }\n\n  deleteFile(uuidFileName: string) {\n    this.storageService.deleteFile(uuidFileName).subscribe(() => {\n      // 從本地列表中移除已刪除的檔案\n      this.uploadedFiles = this.uploadedFiles.filter(f => f.uuidFileName !== uuidFileName);\n      this.loadFiles();\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}