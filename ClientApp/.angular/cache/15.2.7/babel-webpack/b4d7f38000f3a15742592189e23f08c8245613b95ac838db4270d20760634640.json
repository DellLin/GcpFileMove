{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StorageService = /*#__PURE__*/(() => {\n  class StorageService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiUrl}/storage`;\n    }\n    getFileList() {\n      return this.http.get(this.apiUrl);\n    }\n    getFileListWithMetadata() {\n      return this.http.get(`${this.apiUrl}/metadata`);\n    }\n    uploadFile(file) {\n      const formData = new FormData();\n      formData.append('file', file, file.name);\n      return this.http.post(this.apiUrl, formData);\n    }\n    downloadFile(uuidFileName) {\n      // 直接開啟下載連結，讓瀏覽器處理檔案下載\n      const downloadUrl = `${this.apiUrl}/${uuidFileName}`;\n      window.open(downloadUrl, '_blank');\n    }\n    // 如果需要通過 Observable 方式處理下載\n    downloadFileAsBlob(uuidFileName) {\n      return this.http.get(`${this.apiUrl}/${uuidFileName}`, {\n        responseType: 'blob'\n      });\n    }\n    deleteFile(uuidFileName) {\n      return this.http.delete(`${this.apiUrl}/${uuidFileName}`);\n    }\n  }\n  StorageService.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  StorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return StorageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}